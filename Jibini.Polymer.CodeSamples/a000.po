// Copyright (c) 2022 Zach Goethel
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is furnished
// to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in 
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
// IN THE SOFTWARE.

interface IXy<T : Number>
{
    var x, y: T;
};

type Xy<T : Number> : IXy<T>;

interface IRegion<T : Number>
{
    var base: Xy<T>;
    var width, height: T;
};

type Region<T : Number> : IRegion<T>;

fun IRegion<T>::center<T : Number>(): Xy<T>
{
    // this: IRegion<T> &
    return Xy(this.base.x + this.width / 2);
}

type QuadNode<T: Number>(Xy<T> base, T size)
{
    var *children: QuadNode<T>;
    children = { 0 };

public:
    fun branch()
    {
        children = buffer<QuadNode<T>>(4, null);
    }

public:
    fun intersects(&region: IRegion<T>): Bool
    {
        
    }

    fun insert(&region: IRegion<T>, *elem: Object): Bool
    {
        
    }

    fun search(&region: IRegion<T>, cb: Bool(Region *))
    {
        
    }
};

fun main(): Int
{
    final var node0: quad_node_t = { 0 };
    final var node1 = quad_node_t({ 0, 0 }, 32);
}